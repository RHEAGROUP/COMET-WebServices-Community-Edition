image: Visual Studio 2019
environment:
  matrix:
    - TAG_SCENARIO: true
    - DOTNET_CLI_TELEMETRY_OPTOUT: true
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      TEST_RESULT: 'TestResult.xml'
      TEST_COVERAGE: 'CoverResults.xml'
      TAG_SCENARIO: false

skip_branch_with_pr: true

for:
-
  matrix:
    only:
      - TAG_SCENARIO: true

  skip_non_tags: true

  configuration: Release
  before_build:
    - ps: >-
          Write-Host Tag Encountered. Producing Artifact
    - cmd: nuget restore -verbosity quiet
  build_script:
    - cmd: msbuild CDP4-Server.sln -p:Configuration=Release /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
  after_build:
    - cmd: 7z a CDP4WebServices-%APPVEYOR_REPO_TAG_NAME%.zip %APPVEYOR_BUILD_FOLDER%\CDP4WebServer\bin\Release\net472\*

  artifacts:
  - path: CDP4WebServices-%APPVEYOR_REPO_TAG_NAME%.zip
    name: CDP4WebServices %APPVEYOR_REPO_TAG_NAME%

-
  matrix:
    only:
      - TAG_SCENARIO: false

  skip_tags: true

  configuration:
    - Debug
  install:
    - choco install opencover.portable --version=4.7.922
    - choco install "sonarscanner-msbuild-net46" -y
  before_build:
    - cmd: nuget sources add -name github -source https://nuget.pkg.github.com/RHEAGROUP/index.json -username %GITHUB_USER% -password %GITHUB_TOKEN% -StorePasswordInClearText
    - cmd: nuget install NUnit.Console -Version 3.11.1 -OutputDirectory testrunner
    - cmd: nuget install NUnit.Runners -Version 3.11.1 -OutputDirectory testrunner
    - cmd: nuget restore -verbosity detailed
    - cmd: set "JAVA_HOME=C:\Program Files\Java\jdk11"
    - cmd: set "PATH=C:\Program Files\Java\jdk11\bin;%PATH%"
    - cmd: java -version
    - ps: >-
        if ($env:APPVEYOR_PULL_REQUEST_NUMBER){
          Write-Host Scanning PR# $env:APPVEYOR_PULL_REQUEST_NUMBER
          SonarScanner.MSBuild.exe begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT /d:sonar.pullrequest.key=$env:APPVEYOR_PULL_REQUEST_NUMBER /d:sonar.pullrequest.provider=GitHub /d:sonar.pullrequest.github.repository=$env:APPVEYOR_REPO_NAME
        } else {
          Write-Host Scanning branch $env:APPVEYOR_REPO_BRANCH
          SonarScanner.MSBuild.exe begin /key:$env:SONARCLOUD_PROJECT_KEY /o:$env:SONARCLOUD_ORGANIZATION /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login=$env:SONARCLOUD_TOKEN /d:sonar.cs.opencover.reportsPaths=$env:TEST_COVERAGE /d:sonar.cs.nunit.reportsPaths=$env:TEST_RESULT
        }
  build:
    project: CDP4-Server.sln
  test_script:
    - >
      OpenCover.Console.exe
      -log:Error
      -register
      -target:".\testrunner\NUnit.ConsoleRunner.3.11.1\tools\nunit3-console.exe"
      -targetargs:"cdp4ws-tests.nunit --where=""cat!=AppVeyorExclusion"""
      -returntargetcode
      -excludebyfile:*\AutoGen*\*.*
      -hideskipped:All
      -output:"%TEST_COVERAGE%"
  after_test:
    - ps: SonarScanner.MSBuild.exe end /d:"sonar.login=$env:SONARCLOUD_TOKEN"
